package org.demos.drools.cep

import java.util.*

dialect "mvel"

declare EventFact
    @role( event )
    @expires( 2s )
end

global Map result

rule "test1"
when
	Subject($sid:id)
	$n:Number(doubleValue > 0.3) from accumulate( EventFact(subjectId==$sid , $v:value ) over window:time(1s) , average( $v ) ) 
then
	result.put("test1",$n);
end

rule "test2"
when
	SubjectType($stid:name)
	$n:Number() from accumulate( EventFact(subjectTypeId==$stid , $v:value ) over window:time(1s) , max( $v ) ) 
then
	result.put("test2",$n);
end

rule "test3"
when
	$n:Number() from accumulate( EventFact($v:value ) over window:time(1s) , min( $v ) ) 
then
	result.put("test3",$n);
end

rule "test4"
when
	$s:HashSet( empty==false ) from
		accumulate(
			$fact:EventFact() over window:time(1s) ,
			init(
				Set set = new HashSet();
			),
			action(
				if( ((Double)$fact.getValue()).doubleValue() > 7.0 ) set.add( $fact );
			),
			reverse(
				if( set.contains($fact) ) set.remove( $fact );
			),
			result(
				set
			)
		) 
then
	result.put("test4",$s.clone());
end
